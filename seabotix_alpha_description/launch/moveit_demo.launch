<?xml version="1.0"?>
<launch>
    <arg name="gui" default="true"/>
    <arg name="paused" default="false"/>
    <arg name="world_name" default="$(find seabotix_alpha_description)/worlds/valve_manipulation_demo.world"/>
    <arg name="namespace" default="seabotix"/>
 
    <!-- use Gazebo's empty_world.launch with uuv_dave_ocean_waves.world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="true"/>
    </include>

    <!-- Spawn seabotix with alpha manipulator -->
    <include file="$(find seabotix_alpha_description)/launch/upload_seabotix_alpha.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="x" value="20.5"/>
        <arg name="y" value="-10"/>
        <arg name="z" value="-87"/>
        <arg name="yaw" value="3.14"/>
    </include>
   
   <!-- Create Controllers -->
    <include file="$(find alpha_control)/launch/joint_control.launch">
        <arg name="uuv_name" value="$(arg namespace)"/>
    </include>

    <!-- Create Moveit Specific Action servers -->
    <node name="arm_control_action_server" pkg="seabotix_alpha_description" type="arm_control_action_server.py"  output="screen" respawn="false" respawn_delay="0"/>
    <node name="gripper_control_action_server" pkg="seabotix_alpha_description" type="gripper_control_action_server.py"  output="screen" respawn="false" respawn_delay="0"/>
    <node name="vehicle_control_action_server" pkg="seabotix_alpha_description" type="vehicle_control_action_server.py"  output="screen" respawn="false" respawn_delay="0"/>

    <!-- Velocity teleop (UUV stays in position when joystick is not used) -->
    <include file="$(find seabotix_control)/launch/joy_velocity.launch">
        <arg name="uuv_name" value="$(arg namespace)" />
        <arg name="model_name" value="seabotix" />
    </include>  

    <!-- use ned frame north east down -->
    <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

    <!-- world models -->
    <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
            meshes:
                heightmap:
                    mesh: package://uuv_gazebo_worlds/models/sand_heightmap/meshes/heightmap.dae
                    model: sand_heightmap
                seafloor:
                    plane: [2000, 2000, 0.1]
                    pose:
                        position: [0, 0, -100]
                north:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [1000, 0, -50]
                south:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [-1000, 0, -50]
                west:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, -1000, -50]
                east:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, 1000, -50]
        </rosparam>
    </node>


    <!-- <node name="spawn_bop_panel" pkg="gazebo_ros" type="spawn_model"
          args="-file $(find uuv_gazebo_worlds)/models/bop_panel/model.sdf -sdf -model bop_panel -x 15 -y -10 -z -94.9 ">
    </node> -->



    <!-- rqt_image_view for image_raw_camera_image -->
    <!-- <node name="rqt_image_view_camera_image" pkg="rqt_image_view"
          type="rqt_image_view" args="/rexrov/rexrov/camera/camera_image">
    </node> -->
    <!-- RViz -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find seabotix_alpha_description)/rviz/seabotix_default.rviz"/> -->

</launch>
